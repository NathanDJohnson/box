# Fastcgi cache
fastcgi_cache_path /etc/nginx/cache levels=1:2 keys_zone=MYAPP:100m inactive=60m;
fastcgi_cache_key "$scheme$request_method$host$request_uri";

# Listen on port 80 and redirect all requests to https on port 443
server {
    listen 80;
    listen [::]:80 ipv6only=on;
    server_name localhost;
    return 301 https://$server_name$request_uri;
}

# Secure server
server {
    listen 443 ssl http2;
    listen [::]:443 ipv6only=on;
    server_name localhost;
    
    ssl_certificate /etc/nginx/server.crt;
    ssl_certificate_key /etc/nginx/server.key;
    
    root /usr/share/nginx/html;
    index index.php index.html index.htm;
    
    etag on;
    expires 7d;
    if_modified_since before;
    
    location / {
        try_files $uri $uri/ /index.php?$args;
    }
    
    # Block WordPress author scans
    if ($args ~ â€œauthor=\d) { return 403; }
    
    # Block WordPress plugin scans
    location ~* (readme|license|example|changelog)\.(txt|html)$ {
        return 403;
    }
    location ~* ^(/wp-content/plugins/.*/)$ {
        return 404;
    }
    location ~* ^(/wp-content/mu-plugins/)$ {
        return 404;
    }
    # end of WordPress plugin scan
    
    # Don't cache this:
	set $no_cache 0;
	if ($request_method = POST){set $no_cache 1;}
	if ($query_string != ""){set $no_cache 1;}
	if ($request_uri ~* "/(auth/|login.php)"){set $no_cache 1;}
	if ($http_cookie = "PHPSESSID"){set $no_cache 1;}
	
    location ~ \.php$ {
        try_files $uri =404;
        fastcgi_split_path_info ^(.+\.php)(/.+)$;
        fastcgi_pass unix:/var/run/php/php7.0-fpm.sock;
        fastcgi_index index.php;
        fastcgi_param  SCRIPT_FILENAME  $document_root$fastcgi_script_name;
        fastcgi_param WP_NGINX_CONFIG done;
        include fastcgi_params;
		fastcgi_cache MYAPP;
		fastcgi_cache_valid 200 60m;
		fastcgi_cache_bypass $no_cache;
		fastcgi_no_cache $no_cache;
    }
    location ~*  \.(jpg|jpeg|png|gif|ico|css|js|xml)$ {
        access_log off;
        log_not_found off;
        expires 30d;
    }
  location ~* \.(?:ttf|ttc|otf|eot|woff|woff2|css|js)$ {
    add_header Access-Control-Allow-Origin *;
  }
}
