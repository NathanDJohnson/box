# Fastcgi cache
fastcgi_cache_path /var/run/nginx-cache levels=1:2 keys_zone=WORDPRESS:500m inactive=60m;
fastcgi_cache_key "$scheme$request_method$host$request_uri";
fastcgi_cache_use_stale error timeout invalid_header http_500;

# Listen on port 80 and redirect all requests to https on port 443
server {
    listen 80;
    listen [::]:80 ipv6only=on;
    server_name localhost;
    return 301 https://$server_name$request_uri;
}

# Secure server
server {
    listen 443 ssl http2;
    listen [::]:443 ipv6only=on;
    server_name localhost;
    
    ssl_certificate /etc/nginx/server.crt;
    ssl_certificate_key /etc/nginx/server.key;
    
    root /usr/share/nginx/html;
    index index.php index.html index.htm;
    
    etag on;
    expires 7d;
    if_modified_since before;
    
    location / {
        try_files $uri $uri/ /index.php?$args;
    }
    
    # Block WordPress author scans
    if ($args ~ author=\d) { return 403; }
    
    # Block WordPress plugin scans
    location ~* (readme|license|example|changelog)\.(txt|html)$ {
        return 403;
    }
    location ~* ^(/wp-content/plugins/.*/)$ {
        return 404;
    }
    location ~* ^(/wp-content/mu-plugins/)$ {
        return 404;
    }
    # end of WordPress plugin scan
    
    # Don't cache this:
    set $no_cache 0;
    if ($request_method = POST){set $no_cache 1;}
    if ($query_string != ""){set $no_cache 1;}
    if ($request_uri ~* "(/wp-admin/|/xmlrpc.php|/wp-(app|cron|login|register|mail).php|wp-.*.php|/feed/|index.php|wp-comments-popup.php|wp-links-opml.php|wp-locations.php|sitemap(_index)?.xml|[a-z0-9_-]+-sitemap([0-9]+)?.xml)"){set $no_cache 1;}
    if ($http_cookie ~* "comment_author|wordpress_[a-f0-9]+|wp-postpass|wordpress_no_cache|wordpress_logged_in"){set $no_cache 1;} 
	
    location ~ \.php$ {
        try_files $uri =404;
        fastcgi_split_path_info ^(.+\.php)(/.+)$;
        fastcgi_pass unix:/var/run/php/php7.0-fpm.sock;
        fastcgi_param  SCRIPT_FILENAME  $document_root$fastcgi_script_name;
        fastcgi_param WP_NGINX_CONFIG done;
        include fastcgi_params;
        
        fastcgi_index index.php;
        
	fastcgi_cache_bypass $no_cache;
	fastcgi_no_cache $no_cache;
	fastcgi_cache WORDPRESS;
	fastcgi_cache_valid 200 60m;

    }
#    location ~ /purge(/.*) {
#        # Allow purge only from the webserver
#        allow 127.0.0.1;
#	deny all;
#        
#        fastcgi_cache_purge WORDPRESS "$scheme$request_method$host$1";
#    }
    
    location ~*  \.(jpg|jpeg|png|gif|ico|css|js|xml)$ {
        access_log off;
        log_not_found off;
        expires 30d;
    }
  location ~* \.(?:ttf|ttc|otf|eot|woff|woff2|css|js)$ {
    add_header Access-Control-Allow-Origin *;
  }
}
